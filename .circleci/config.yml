version: 2.1

workflows:
  version: 2
  test:
    jobs:
      - build-test-linux:
          name: Ruby 2.5
          docker-image: cimg/ruby:2.5
      - build-test-linux:
          name: Ruby 2.6
          docker-image: cimg/ruby:2.6
      - build-test-linux:
          name: Ruby 2.7
          docker-image: cimg/ruby:2.7
      - build-test-linux:
          name: Ruby 3.0
          docker-image: cimg/ruby:3.0
      - build-test-linux:
          name: Ruby 3.1
          docker-image: cimg/ruby:3.1
      - build-test-linux:
          name: Ruby 3.2
          docker-image: cimg/ruby:3.2
      - build-test-linux:
          name: JRuby 9.2
          docker-image: jruby:9.2-jdk
          jruby: true
          skip-end-to-end-http-tests: "y"  # webrick doesn't work reliably in JRuby
      - build-test-linux:
          name: JRuby 9.3
          docker-image: jruby:9.3-jdk
          jruby: true
          skip-end-to-end-http-tests: "y"  # webrick doesn't work reliably in JRuby
      - build-test-linux:
          name: JRuby 9.4
          docker-image: jruby:9.4-jdk
          jruby: true
          skip-end-to-end-http-tests: "y"  # webrick doesn't work reliably in JRuby

jobs:
  build-test-linux:
    parameters:
      docker-image:
        type: string
      jruby:
        type: boolean
        default: false
      skip-end-to-end-http-tests:
        type: string
        default: ""

    docker:
      - image: <<parameters.docker-image>>
        environment:
          LD_SKIP_END_TO_END_HTTP_TESTS: <<parameters.skip-end-to-end-http-tests>>

    steps:
      - checkout
      - when:
          condition: <<parameters.jruby>>
          steps:
            - run: gem install jruby-openssl  # required by bundler, no effect on Ruby MRI
            - run: apt-get update -y && apt-get install -y build-essential
      - when:
          condition:
             not: <<parameters.jruby>>
          steps:
            - run: sudo apt-get update -y && sudo apt-get install -y build-essential
      - run: ruby -v
      - run: gem install bundler -v 2.2.10
      - run: bundle _2.2.10_ install
      - run: mkdir ./rspec
      - run: bundle _2.2.10_ exec rspec --format documentation --format RspecJunitFormatter -o ./rspec/rspec.xml spec
      - store_test_results:
          path: ./rspec
      - store_artifacts:
          path: ./rspec
